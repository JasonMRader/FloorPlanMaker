<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Jason/OneDrive/Source/Repos/FloorPlanMaker/FloorPlanMaker/FloorplanMakerDB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2706"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,10:mainDiningArea"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">-- DiningArea Table
CREATE TABLE DiningArea (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    IsInside BOOLEAN NOT NULL
);

-- Table Table (I'd recommend renaming this to something less confusing)
CREATE TABLE DiningTable (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TableNumber TEXT,
    MaxCovers INTEGER NOT NULL,
    AverageCovers INTEGER NOT NULL,
    DiningAreaID INTEGER,
    FOREIGN KEY (DiningAreaID) REFERENCES DiningArea(ID)
);

-- Server Table
CREATE TABLE Server (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL
);

-- Section Table
CREATE TABLE Section (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    MaxCovers INTEGER NOT NULL,
    AverageCovers INTEGER NOT NULL,
    ServerID1 INTEGER,
    ServerID2 INTEGER,
    IsCloser BOOLEAN NOT NULL,
    IsPre BOOLEAN NOT NULL,
    TeamWait BOOLEAN NOT NULL,
    FOREIGN KEY (ServerID1) REFERENCES Server(ID),
    FOREIGN KEY (ServerID2) REFERENCES Server(ID)
);

-- Floorplan Table
CREATE TABLE Floorplan (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Date DATE NOT NULL,
    IsLunch BOOLEAN NOT NULL,
    DiningAreaID INTEGER,
    FOREIGN KEY (DiningAreaID) REFERENCES DiningArea(ID)
);

-- Section to Floorplan Relationship Table
CREATE TABLE FloorplanSections (
    FloorplanID INTEGER,
    SectionID INTEGER,
    PRIMARY KEY (FloorplanID, SectionID),
    FOREIGN KEY (FloorplanID) REFERENCES Floorplan(ID),
    FOREIGN KEY (SectionID) REFERENCES Section(ID)
);

-- Table to Section Relationship Table
CREATE TABLE SectionTables (
    SectionID INTEGER,
    TableID INTEGER,
    PRIMARY KEY (SectionID, TableID),
    FOREIGN KEY (SectionID) REFERENCES Section(ID),
    FOREIGN KEY (TableID) REFERENCES DiningTable(ID)
);
</sql><current_tab id="0"/></tab_sql></sqlb_project>
